{"ast":null,"code":"var _jsxFileName = \"D:\\\\data1\\\\MERNblog\\\\frontend\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport React, { useEffect, useState } from \"react\";\nimport Footer from './Footer';\nimport { allposts } from '../redux';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faEye } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst renderdata = allpost => {\n  return allpost.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/showpost/\" + post.slug,\n      params: {\n        slug: post.slug\n      },\n      style: {\n        textDecoration: 'none',\n        color: 'inherit'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '50%',\n          margin: '30px',\n          cursor: 'pointer'\n        },\n        className: \"mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: process.env.PUBLIC_URL + `/images/${post.image}`,\n          style: {\n            height: '350px'\n          },\n          alt: \"mypic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'silver'\n              },\n              children: [\"Published \", moment(post.updatedAt).fromNow()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 83\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'silver'\n              },\n              children: [\"By \", post.username, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  fontFamily: 'Noto Sans KR sans-serif'\n                },\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false));\n};\n\nexport default function Home() {\n  _s();\n\n  const {\n    user,\n    loginsuccess\n  } = useSelector(state => state.AuthReducer);\n  const {\n    allpost\n  } = useSelector(state => state.PostReducer);\n  const dispatch = useDispatch(); //dispatch(allposts());\n  //console.log(\"all posts are\",allpost)\n\n  const [currentPage, setcurrentPage] = useState(1);\n  const [itemsPerPage, setitemsPerPage] = useState(3);\n\n  const handleclick = event => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(allpost.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const renderPage = pages.map(number => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      id: number,\n      onClick: handleclick,\n      className: currentPage == number ? \"active\" : null,\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  });\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = allpost.slice(indexOfFirstItem, indexOfLastItem);\n  useEffect(() => {\n    dispatch(allposts());\n  }, []);\n  useEffect(() => {\n    if (loginsuccess) {\n      toast.success(loginsuccess);\n    }\n  }, []);\n  const title = user ? /*#__PURE__*/_jsxDEV(Helmet, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      charSet: \"utf-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Blog-Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Helmet, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      charSet: \"utf-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 17\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), allpost.length > 0 ? renderdata(currentItems) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"No posts to show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageNumbers\",\n        children: [\" \", renderPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"SYhh0NUi7rf44xXaTZyhjss+HPc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/data1/MERNblog/frontend/src/components/Home.js"],"names":["useSelector","useDispatch","Helmet","React","useEffect","useState","Footer","allposts","Card","Button","FontAwesomeIcon","faUser","faEye","moment","Link","toast","Toaster","renderdata","allpost","map","post","slug","textDecoration","color","width","margin","cursor","process","env","PUBLIC_URL","image","height","updatedAt","fromNow","username","fontFamily","title","Home","user","loginsuccess","state","AuthReducer","PostReducer","dispatch","currentPage","setcurrentPage","itemsPerPage","setitemsPerPage","handleclick","event","Number","target","id","pages","i","Math","ceil","length","push","renderPage","number","indexOfLastItem","indexOfFirstItem","currentItems","slice","success"],"mappings":";;;AAAA,SAAQA,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,QAAR,QAAuB,UAAvB;AACA,SAASC,IAAT,EAAcC,MAAd,QAA2B,iBAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAgBC,KAAhB,QAA6B,mCAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,IAAcC,OAAd,QAA4B,iBAA5B;AAGA,OAAO,aAAP;;;;AAIA,MAAMC,UAAU,GAAEC,OAAD,IAAW;AAKxB,SACEA,OAAO,CAACC,GAAR,CAAaC,IAAD,iBACV;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,eAAeA,IAAI,CAACC,IAA9B;AAAoC,MAAA,MAAM,EAAE;AAAEA,QAAAA,IAAI,EAAED,IAAI,CAACC;AAAb,OAA5C;AAAiE,MAAA,KAAK,EAAE;AAACC,QAAAA,cAAc,EAAC,MAAhB;AAAuBC,QAAAA,KAAK,EAAC;AAA7B,OAAxE;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAeC,UAAAA,MAAM,EAAE,MAAvB;AAA8BC,UAAAA,MAAM,EAAC;AAArC,SAAb;AAA8D,QAAA,SAAS,EAAC,SAAxE;AAAA,gCAER,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,OAAO,EAAC,KAAlB;AAAwB,UAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAA0B,WAAUT,IAAI,CAACU,KAAM,EAA5E;AAAgF,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAvF;AAA0G,UAAA,GAAG,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,gBAFQ,eAGR,QAAC,IAAD,CAAM,IAAN;AAAA,kCACA,QAAC,IAAD,CAAM,KAAN;AAAA,oCAEA;AAAM,cAAA,KAAK,EAAE;AAACR,gBAAAA,KAAK,EAAC;AAAP,eAAb;AAAA,uCAA0CV,MAAM,CAACO,IAAI,CAACY,SAAN,CAAN,CAAuBC,OAAvB,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAEkF;AAAA;AAAA;AAAA;AAAA,oBAFlF,eAGA;AAAM,cAAA,KAAK,EAAE;AAACV,gBAAAA,KAAK,EAAC;AAAP,eAAb;AAAA,gCAAmCH,IAAI,CAACc,QAAxC,oBAAkD,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAEvB;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAIK;AAAA,qCAAG;AAAI,gBAAA,KAAK,EAAE;AAACwB,kBAAAA,UAAU,EAAE;AAAb,iBAAX;AAAA,0BAAsDf,IAAI,CAACgB;AAA3D;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAQA,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA,kBARA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF,CADF;AA6BH,CAlCD;;AAoCA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAE5B,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAoBvC,WAAW,CAACwC,KAAK,IAAEA,KAAK,CAACC,WAAd,CAArC;AACD,QAAM;AAACvB,IAAAA;AAAD,MAAYlB,WAAW,CAACwC,KAAK,IAAEA,KAAK,CAACE,WAAd,CAA7B;AACC,QAAMC,QAAQ,GAAG1C,WAAW,EAA5B,CAJ4B,CAK5B;AAEA;;AACA,QAAM,CAAC2C,WAAD,EAAaC,cAAb,IAA6BxC,QAAQ,CAAC,CAAD,CAA3C;AACE,QAAM,CAACyC,YAAD,EAAcC,eAAd,IAA+B1C,QAAQ,CAAC,CAAD,CAA7C;;AAEA,QAAM2C,WAAW,GAAEC,KAAD,IAAS;AACzBJ,IAAAA,cAAc,CAACK,MAAM,CAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAP,CAAd;AACD,GAFD;;AAGA,QAAMC,KAAK,GAAC,EAAZ;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAEC,IAAI,CAACC,IAAL,CAAUtC,OAAO,CAACuC,MAAR,GAAeX,YAAzB,CAAf,EAAsDQ,CAAC,EAAvD,EAA0D;AACtDD,IAAAA,KAAK,CAACK,IAAN,CAAWJ,CAAX;AAEH;;AACD,QAAMK,UAAU,GAACN,KAAK,CAAClC,GAAN,CAAUyC,MAAM,IAAE;AAC/B,wBACI;AAAiB,MAAA,EAAE,EAAEA,MAArB;AAA6B,MAAA,OAAO,EAAEZ,WAAtC;AAAmD,MAAA,SAAS,EAAEJ,WAAW,IAAIgB,MAAf,GAAwB,QAAxB,GAAmC,IAAjG;AAAA,gBAAyGA;AAAzG,OAASA,MAAT;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJgB,CAAjB;AAKF,QAAMC,eAAe,GAACjB,WAAW,GAACE,YAAlC;AACA,QAAMgB,gBAAgB,GAACD,eAAe,GAACf,YAAvC;AACA,QAAMiB,YAAY,GAAC7C,OAAO,CAAC8C,KAAR,CAAcF,gBAAd,EAA+BD,eAA/B,CAAnB;AAEDzD,EAAAA,SAAS,CAAC,MAAI;AACZuC,IAAAA,QAAQ,CAACpC,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGmC,YAAH,EACA;AACCxB,MAAAA,KAAK,CAACkD,OAAN,CAAc1B,YAAd;AACA;AACF,GALQ,EAKP,EALO,CAAT;AAOD,QAAMH,KAAK,GAACE,IAAI,gBAAQ,QAAC,MAAD;AAAA,4BACxB;AAAM,MAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADwB,eAExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFwB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR,gBAGA,QAAC,MAAD;AAAA,4BACA;AAAM,MAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHhB;AAOI,sBACE;AAAA,4BAEE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA,cADA,EAIFpB,OAAO,CAACuC,MAAR,GAAe,CAAf,GAAoBxC,UAAU,CAAC8C,YAAD,CAA9B,gBAA+C;AAAI,QAAA,KAAK,EAAE;AAACtC,UAAAA,MAAM,EAAC;AAAR,SAAX;AAAA,+BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAJ7C,eAMJ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,wBAA+BkC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cANI;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeH;;GA7DuBtB,I;UAEIrC,W,EACTA,W,EACAC,W;;;KAJKoC,I","sourcesContent":["import {useSelector,useDispatch} from 'react-redux';\r\nimport {Helmet} from 'react-helmet'\r\nimport React, { useEffect,useState} from \"react\";\r\nimport Footer from './Footer';\r\nimport {allposts} from '../redux';\r\nimport { Card,Button} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser,faEye } from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment';\r\nimport {Link} from 'react-router-dom';\r\nimport toast,{Toaster} from 'react-hot-toast';\r\n\r\n\r\nimport \"./style.css\"\r\n\r\n\r\n\r\nconst renderdata=(allpost)=>{\r\n \r\n\r\n\r\n \r\n    return ( \r\n      allpost.map((post)=>(\r\n        <>\r\n        <Link to={\"/showpost/\" + post.slug} params={{ slug: post.slug }} style={{textDecoration:'none',color:'inherit'}} >\r\n        <Card style={{ width: '50%',margin: '30px',cursor:'pointer'}} className=\"mx-auto\" >\r\n\r\n<Card.Img variant=\"top\" src={process.env.PUBLIC_URL + `/images/${post.image}` } style={{height: '350px'}} alt=\"mypic\" />\r\n<Card.Body>\r\n<Card.Title >\r\n\r\n<span style={{color:'silver'}}>Published {moment(post.updatedAt).fromNow()}</span><br/>\r\n<span style={{color:'silver'}}>By {post.username} <FontAwesomeIcon icon={faUser} /></span>\r\n<br/><b><h1 style={{fontFamily: 'Noto Sans KR sans-serif'}} >{post.title}</h1></b>\r\n</Card.Title>\r\n\r\n<Card.Text>\r\n\r\n\r\n</Card.Text>\r\n\r\n\r\n\r\n</Card.Body>\r\n</Card>\r\n</Link>\r\n</>   \r\n      )         \r\n))\r\n\r\n}\r\n\r\nexport default function Home(){\r\n    \r\n  const {user,loginsuccess}=useSelector(state=>state.AuthReducer);\r\n const {allpost} = useSelector(state=>state.PostReducer);\r\n  const dispatch = useDispatch();\r\n  //dispatch(allposts());\r\n   \r\n  //console.log(\"all posts are\",allpost)\r\n  const [currentPage,setcurrentPage]=useState(1);\r\n    const [itemsPerPage,setitemsPerPage]=useState(3);\r\n\r\n    const handleclick=(event)=>{\r\n      setcurrentPage(Number(event.target.id));\r\n    }\r\n    const pages=[];\r\n    for(let i=1;i<=Math.ceil(allpost.length/itemsPerPage);i++){\r\n        pages.push(i);\r\n\r\n    }\r\n    const renderPage=pages.map(number=>{\r\n        return (\r\n            <li key={number} id={number} onClick={handleclick} className={currentPage == number ? \"active\" : null} >{number}</li>\r\n        )\r\n    })\r\n  const indexOfLastItem=currentPage*itemsPerPage;\r\n  const indexOfFirstItem=indexOfLastItem-itemsPerPage;\r\n  const currentItems=allpost.slice(indexOfFirstItem,indexOfLastItem);\r\n\r\n useEffect(()=>{\r\n   dispatch(allposts());\r\n },[])\r\n \r\n useEffect(()=>{\r\n   if(loginsuccess)\r\n   { \r\n    toast.success(loginsuccess) \r\n   }\r\n },[])\r\n \r\nconst title=user ?      <Helmet>\r\n<meta charSet=\"utf-8\" />\r\n<title>Blog-Home</title>\r\n</Helmet> :     <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Blog</title>\r\n            </Helmet>;\r\n    return (\r\n      <>\r\n   \r\n        <div>\r\n        <br/>\r\n    \r\n\r\n    { allpost.length>0 ?  renderdata(currentItems) : <h3 style={{margin:'auto'}} ><i>No posts to show</i></h3>}\r\n            \r\n    <div className=\"pageNumbers\"> {renderPage}</div>\r\n        </div>\r\n        <br></br>\r\n        <Footer/>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}