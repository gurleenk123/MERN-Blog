{"ast":null,"code":"var _jsxFileName = \"D:\\\\data1\\\\MERNblog\\\\frontend\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport React, { useEffect, useState } from \"react\";\nimport Footer from './Footer';\nimport { allposts } from '../redux';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faEye } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => state.AuthReducer);\n  const {\n    allpost\n  } = useSelector(state => state.PostReducer);\n  const dispatch = useDispatch(); //dispatch(allposts());\n  //console.log(\"all posts are\",allpost)\n\n  const [currentPage, setcurrentPage] = useState(1);\n  const [itemsPerPage, setitemsPerPage] = useState(3);\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(allpost.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const renderPage = pages.map(number => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      id: number,\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  });\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = post;\n  useEffect(() => {\n    dispatch(allposts());\n  }, []);\n  const title = user ? /*#__PURE__*/_jsxDEV(Helmet, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      charSet: \"utf-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Blog-Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Helmet, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      charSet: \"utf-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageNumbers\",\n        children: [\" \", renderPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this), allpost ? allpost.map(post => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '50%',\n              margin: '30px'\n            },\n            className: \"mx-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 31\n              }, this), \"UPLOADED BY:   \", post.username, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: process.env.PUBLIC_URL + `/images/${post.image}`,\n              style: {\n                height: '350px'\n              },\n              alt: \"mypic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'silver'\n                  },\n                  children: [\"Published \", moment(post.updatedAt).fromNow()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    style: {\n                      fontFamily: 'Noto Sans KR sans-serif'\n                    },\n                    children: post.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                style: {\n                  margin: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faEye\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 52\n                }, this), \" Click To See Post\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"ZQDPnlwq+x5xO71pZ9BtYxYaats=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/data1/MERNblog/frontend/src/components/Home.js"],"names":["useSelector","useDispatch","Helmet","React","useEffect","useState","Footer","allposts","Card","Button","FontAwesomeIcon","faUser","faEye","moment","Home","user","state","AuthReducer","allpost","PostReducer","dispatch","currentPage","setcurrentPage","itemsPerPage","setitemsPerPage","pages","i","Math","ceil","length","push","renderPage","map","number","indexOfLastItem","indexOfFirstItem","currentItems","post","title","width","margin","username","process","env","PUBLIC_URL","image","height","color","updatedAt","fromNow","fontFamily","description"],"mappings":"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","sourcesContent":["import {useSelector,useDispatch} from 'react-redux';\r\nimport {Helmet} from 'react-helmet'\r\nimport React, { useEffect,useState} from \"react\";\r\nimport Footer from './Footer';\r\nimport {allposts} from '../redux';\r\nimport { Card,Button} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser,faEye } from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment';\r\nimport \"./style.css\"\r\n\r\n\r\nexport default function Home(){\r\n    \r\n  const {user}=useSelector(state=>state.AuthReducer);\r\n const {allpost} = useSelector(state=>state.PostReducer);\r\n  const dispatch = useDispatch();\r\n  //dispatch(allposts());\r\n   \r\n  //console.log(\"all posts are\",allpost)\r\n  const [currentPage,setcurrentPage]=useState(1);\r\n    const [itemsPerPage,setitemsPerPage]=useState(3);\r\n    const pages=[];\r\n    for(let i=1;i<=Math.ceil(allpost.length/itemsPerPage);i++){\r\n        pages.push(i);\r\n\r\n    }\r\n    const renderPage=pages.map(number=>{\r\n        return (\r\n            <li key={number} id={number}>{number}</li>\r\n        )\r\n    })\r\n  const indexOfLastItem=currentPage*itemsPerPage;\r\n  const indexOfFirstItem=indexOfLastItem-itemsPerPage;\r\n  const currentItems=post\r\n useEffect(()=>{\r\n   dispatch(allposts());\r\n },[])\r\n  \r\n \r\nconst title=user ?      <Helmet>\r\n<meta charSet=\"utf-8\" />\r\n<title>Blog-Home</title>\r\n</Helmet> :     <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Blog</title>\r\n            </Helmet>;\r\n    return (\r\n      <>\r\n   \r\n        <div>\r\n     <div className=\"pageNumbers\"> {renderPage}</div>\r\n\r\n    { allpost ? \r\n                 \r\n               \r\n                 allpost.map((post)=>{ \r\n                    return ( \r\n                        <>\r\n                        <Card style={{ width: '50%',margin: '30px'}} className=\"mx-auto\">\r\n\r\n                        <div ><br/>UPLOADED BY:   {post.username} <FontAwesomeIcon icon={faUser} /></div>\r\n  <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + `/images/${post.image}` } style={{height: '350px'}} alt=\"mypic\" />\r\n  <Card.Body>\r\n    <Card.Title>\r\n   \r\n    <span style={{color:'silver'}}>Published {moment(post.updatedAt).fromNow()}</span>\r\n    <br/><b><h1 style={{fontFamily: 'Noto Sans KR sans-serif'}}>{post.title}</h1></b></Card.Title>\r\n    <hr/>\r\n    <Card.Text>\r\n    <h3>{post.description}</h3>\r\n\r\n    </Card.Text>\r\n    <Button variant=\"info\" style={{margin:'20px'}}><FontAwesomeIcon icon={faEye} /> Click To See Post</Button>\r\n\r\n   \r\n  </Card.Body>\r\n</Card>\r\n           \r\n           </>            \r\n            )})\r\n\r\n                :null\r\n            }\r\n            \r\n           \r\n        </div>\r\n        <Footer/>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}