{"ast":null,"code":"var _jsxFileName = \"D:\\\\data1\\\\MERNblog\\\\frontend\\\\src\\\\components\\\\MyPosts.js\",\n    _s = $RefreshSig$();\n\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport React, { useEffect } from \"react\";\nimport Footer from './Footer';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { REMOVE_REDIRECT } from '../redux/actions/PostTypes';\nimport { myposts } from '../redux';\nimport { Alert, ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Myposts() {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => state.AuthReducer);\n  const {\n    posts\n  } = useSelector(state => state.PostReducer);\n  const {\n    post_success\n  } = useSelector(state => state.PostReducer);\n  const dispatch = useDispatch();\n  console.log(\"posts are:\", resp);\n  useEffect(() => {\n    if (post_success) {\n      toast.success(post_success);\n      dispatch({\n        type: REMOVE_REDIRECT\n      });\n    }\n\n    dispatch(myposts(user[0]._id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [user ? null : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"My Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MY POSTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), posts.length > 0 ? posts.map((i, post) => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this)) : null, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Myposts, \"JrRgMi0O+i4TinT+E+hGVu8N9is=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Myposts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Myposts\");","map":{"version":3,"sources":["D:/data1/MERNblog/frontend/src/components/MyPosts.js"],"names":["Helmet","useDispatch","useSelector","Redirect","React","useEffect","Footer","toast","Toaster","REMOVE_REDIRECT","myposts","Alert","ListGroup","Myposts","user","state","AuthReducer","posts","PostReducer","post_success","dispatch","console","log","resp","success","type","_id","length","map","i","post","title"],"mappings":";;;AAAA,SAAQA,MAAR,QAAqB,cAArB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAcC,OAAd,QAA4B,iBAA5B;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,iBAAjC;;;AACA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAAQZ,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACC,WAAd,CAAzB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAQf,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACG,WAAd,CAAzB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAgBjB,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACG,WAAd,CAAjC;AACA,QAAME,QAAQ,GAAGnB,WAAW,EAA5B;AAEAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBC,IAAzB;AACAlB,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAGc,YAAH,EACA;AACIZ,MAAAA,KAAK,CAACiB,OAAN,CAAcL,YAAd;AACAC,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEhB;AAAR,OAAD,CAAR;AAEH;;AACDW,IAAAA,QAAQ,CAACV,OAAO,CAACI,IAAI,CAAC,CAAD,CAAJ,CAAQY,GAAT,CAAR,CAAR;AACH,GATQ,EASP,EATO,CAAT;AAWA,sBACI;AAAA,eACCZ,IAAI,GAAG,IAAH,gBAAS,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADd,eAIA,QAAC,MAAD;AAAA,8BACQ;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAQI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAUMG,KAAK,CAACU,MAAN,GAAa,CAAb,GAEGV,KAAK,CAACW,GAAN,CAAU,CAACC,CAAD,EAAGC,IAAH,kBACR;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,CAFH,GAUC,IApBP,eAwBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA,kBADJ;AA4BH;;GA9CuBlB,O;UACNX,W,EACAA,W,EACQA,W,EACLD,W;;;KAJGY,O","sourcesContent":["import {Helmet} from 'react-helmet'\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\nimport React, {useEffect} from \"react\";\r\nimport Footer from './Footer';\r\nimport toast,{Toaster} from 'react-hot-toast';\r\nimport {REMOVE_REDIRECT} from '../redux/actions/PostTypes';\r\nimport {myposts} from '../redux';\r\nimport { Alert, ListGroup } from 'react-bootstrap'\r\nexport default function Myposts(){\r\n    const {user }=useSelector(state=>state.AuthReducer);\r\n    const {posts}=useSelector(state=>state.PostReducer);\r\n    const {post_success} =useSelector(state=>state.PostReducer);\r\n    const dispatch = useDispatch();\r\n   \r\n    console.log(\"posts are:\",resp);\r\n    useEffect(()=>{\r\n\r\n        if(post_success)\r\n        {\r\n            toast.success(post_success) \r\n            dispatch({ type: REMOVE_REDIRECT})\r\n\r\n        }\r\n        dispatch(myposts(user[0]._id));\r\n    },[])\r\n  \r\n    return (\r\n        <>\r\n        {user ? null :<Redirect to=\"/\" /> }\r\n        \r\n        \r\n        <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>My Posts</title>\r\n            </Helmet>\r\n            <Toaster /> \r\n            <h1>MY POSTS</h1>\r\n            { posts.length>0 ? \r\n                 \r\n                 posts.map((i,post)=>(\r\n                   <h1>{post.title}</h1>\r\n                 ))\r\n             \r\n              \r\n          \r\n         \r\n\r\n             : null\r\n            }\r\n           \r\n\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}