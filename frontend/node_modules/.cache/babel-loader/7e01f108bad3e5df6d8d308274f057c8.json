{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_POST, POST_ERROR, POST_SUCCESS } from './PostTypes.js';\nconst token = localStorage.getItem('mytoken');\nexport const creating = post => {\n  for (var pair of formdata.entries()) {\n    console.log(pair[0] + ', ' + pair[1]);\n  }\n\n  return function (dispatch) {\n    dispatch(create());\n    var config = {\n      method: 'post',\n      url: 'localhost:5000/post/createpost',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: post\n    };\n    axios(config).then(function (response) {\n      console.log(response);\n      dispatch(createdone(response.data.message));\n    }).catch(function (error) {\n      console.log(error.response);\n      dispatch(createerror.response.data.errors);\n    });\n  };\n};\n\nconst create = () => {\n  return {\n    type: CREATE_POST\n  };\n};\n\nconst createdone = success => {\n  return {\n    type: POST_SUCCESS,\n    payload: success\n  };\n};\n\nconst createerror = error => {\n  return {\n    type: POST_ERROR,\n    payload: error\n  };\n};","map":{"version":3,"sources":["D:/data1/MERNblog/frontend/src/redux/actions/PostAction.js"],"names":["axios","CREATE_POST","POST_ERROR","POST_SUCCESS","token","localStorage","getItem","creating","post","pair","formdata","entries","console","log","dispatch","create","config","method","url","headers","Authorization","data","then","response","createdone","message","catch","error","createerror","errors","type","success","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAoBC,UAApB,EAA+BC,YAA/B,QAAkD,gBAAlD;AACA,MAAMC,KAAK,GAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;AAEA,OAAO,MAAMC,QAAQ,GAAEC,IAAD,IAAQ;AAC5B,OAAK,IAAIC,IAAT,IAAiBC,QAAQ,CAACC,OAAT,EAAjB,EAAqC;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAAC,CAAD,CAAJ,GAAS,IAAT,GAAgBA,IAAI,CAAC,CAAD,CAAhC;AACD;;AACC,SAAO,UAAUK,QAAV,EAAmB;AACtBA,IAAAA,QAAQ,CAACC,MAAM,EAAP,CAAR;AACA,QAAIC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,GAAG,EAAE,gCAFM;AAGXC,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAG,UAAShB,KAAM;AADvB,OAHE;AAOXiB,MAAAA,IAAI,EAAGb;AAPI,KAAb;AAUAR,IAAAA,KAAK,CAACgB,MAAD,CAAL,CAAcM,IAAd,CAAmB,UAAUC,QAAV,EAAoB;AACrCX,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACAT,MAAAA,QAAQ,CAACU,UAAU,CAACD,QAAQ,CAACF,IAAT,CAAcI,OAAf,CAAX,CAAR;AACD,KAHD,EAICC,KAJD,CAIO,UAAUC,KAAV,EAAiB;AACtBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAK,CAACJ,QAAlB;AACAT,MAAAA,QAAQ,CAACc,WAAW,CAACL,QAAZ,CAAqBF,IAArB,CAA0BQ,MAA3B,CAAR;AACD,KAPD;AAUH,GAtBD;AAwBL,CA5BM;;AA6BP,MAAMd,MAAM,GAAC,MAAI;AACb,SAAM;AACNe,IAAAA,IAAI,EAAC7B;AADC,GAAN;AAIH,CALD;;AAMA,MAAMuB,UAAU,GAAEO,OAAD,IAAW;AACxB,SAAO;AACHD,IAAAA,IAAI,EAAC3B,YADF;AAEH6B,IAAAA,OAAO,EAAED;AAFN,GAAP;AAKH,CAND;;AAOA,MAAMH,WAAW,GAAED,KAAD,IAAS;AACvB,SAAO;AACHG,IAAAA,IAAI,EAAC5B,UADF;AAEH8B,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAKH,CAND","sourcesContent":["import axios from 'axios';\r\nimport {CREATE_POST,POST_ERROR,POST_SUCCESS} from './PostTypes.js';\r\nconst token=localStorage.getItem('mytoken');\r\n\r\nexport const creating=(post)=>{\r\n  for (var pair of formdata.entries()) {\r\n      console.log(pair[0]+ ', ' + pair[1]); \r\n    }\r\n      return function (dispatch){\r\n          dispatch(create());\r\n          var config = {\r\n            method: 'post',\r\n            url: 'localhost:5000/post/createpost',\r\n            headers: { \r\n             Authorization: `Bearer ${token}`,\r\n             \r\n            },\r\n            data : post\r\n          };\r\n         \r\n          axios(config).then(function (response) { \r\n            console.log(response);\r\n            dispatch(createdone(response.data.message));\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error.response);\r\n            dispatch(createerror.response.data.errors);\r\n          });\r\n\r\n\r\n      }\r\n\r\n}\r\nconst create=()=>{\r\n    return{\r\n    type:CREATE_POST\r\n    }\r\n\r\n}\r\nconst createdone=(success)=>{\r\n    return {\r\n        type:POST_SUCCESS,\r\n        payload: success\r\n    }\r\n  \r\n}\r\nconst createerror=(error)=>{\r\n    return {\r\n        type:POST_ERROR,\r\n        payload: error\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}