{"ast":null,"code":"import { SIGN_UP, SIGNUP_DONE, SIGNUP_ERROR, LOGIN, LOGIN_ERROR, LOGIN_DONE } from '../actions/Actiontypes.js';\nimport jwt_decode from \"jwt-decode\";\nconst initialState = {\n  loading: false,\n  signupErrors: [],\n  signsuccess: '',\n  loginError: [],\n  loginsuccess: ''\n};\nconst token = localStorage.getItem('mytoken');\n\nif (token) {\n  const decodedtoken = jwt_decode(token);\n  const expires = new Date(decodedtoken.exp * 1000);\n} //console.log('Decoded token',decodedtoken);\n\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_UP:\n      return { ...state,\n        loading: true\n      };\n\n    case SIGNUP_DONE:\n      return { ...state,\n        loading: false,\n        signupErrors: [],\n        signsuccess: action.payload\n      };\n\n    case SIGNUP_ERROR:\n      return { ...state,\n        loading: false,\n        signupErrors: action.payload,\n        signsuccess: ''\n      };\n\n    case LOGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGIN_DONE:\n      return { ...state,\n        loading: false,\n        loginError: [],\n        loginsuccess: action.payload\n      };\n\n    case LOGIN_ERROR:\n      return { ...state,\n        loading: false,\n        loginError: action.payload,\n        loginsuccess: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["D:/data1/MERNblog/frontend/src/redux/reducers/AuthReducer.js"],"names":["SIGN_UP","SIGNUP_DONE","SIGNUP_ERROR","LOGIN","LOGIN_ERROR","LOGIN_DONE","jwt_decode","initialState","loading","signupErrors","signsuccess","loginError","loginsuccess","token","localStorage","getItem","decodedtoken","expires","Date","exp","AuthReducer","state","action","type","payload"],"mappings":"AAAA,SAAQA,OAAR,EAAgBC,WAAhB,EAA4BC,YAA5B,EAAyCC,KAAzC,EAA+CC,WAA/C,EAA2DC,UAA3D,QAA4E,2BAA5E;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,MAAMC,YAAY,GAAC;AACfC,EAAAA,OAAO,EAAE,KADM;AAEfC,EAAAA,YAAY,EAAC,EAFE;AAGfC,EAAAA,WAAW,EAAC,EAHG;AAIfC,EAAAA,UAAU,EAAC,EAJI;AAKfC,EAAAA,YAAY,EAAC;AALE,CAAnB;AAOA,MAAMC,KAAK,GAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;;AACA,IAAGF,KAAH,EACA;AACI,QAAMG,YAAY,GAACV,UAAU,CAACO,KAAD,CAA7B;AACJ,QAAMI,OAAO,GAAC,IAAIC,IAAJ,CAASF,YAAY,CAACG,GAAb,GAAiB,IAA1B,CAAd;AAGC,C,CACD;;;AACA,MAAMC,WAAW,GAAC,CAACC,KAAK,GAACd,YAAP,EAAoBe,MAApB,KAA6B;AAC5C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKvB,OAAL;AAAa,aAAM,EACf,GAAGqB,KADY;AAEfb,QAAAA,OAAO,EAAC;AAFO,OAAN;;AAIb,SAAKP,WAAL;AAAiB,aAAM,EACnB,GAAGoB,KADgB;AAEnBb,QAAAA,OAAO,EAAC,KAFW;AAGnBC,QAAAA,YAAY,EAAC,EAHM;AAInBC,QAAAA,WAAW,EAACY,MAAM,CAACE;AAJA,OAAN;;AAMjB,SAAKtB,YAAL;AAAkB,aAAM,EACpB,GAAGmB,KADiB;AAEpBb,QAAAA,OAAO,EAAC,KAFY;AAGpBC,QAAAA,YAAY,EAACa,MAAM,CAACE,OAHA;AAIpBd,QAAAA,WAAW,EAAC;AAJQ,OAAN;;AAMlB,SAAKP,KAAL;AAAW,aAAM,EAChB,GAAGkB,KADa;AAEhBb,QAAAA,OAAO,EAAC;AAFQ,OAAN;;AAKX,SAAKH,UAAL;AAAgB,aAAM,EACrB,GAAGgB,KADkB;AAErBb,QAAAA,OAAO,EAAC,KAFa;AAGrBG,QAAAA,UAAU,EAAC,EAHU;AAIrBC,QAAAA,YAAY,EAACU,MAAM,CAACE;AAJC,OAAN;;AAOhB,SAAKpB,WAAL;AAAiB,aAAM,EACnB,GAAGiB,KADgB;AAEtBb,QAAAA,OAAO,EAAC,KAFc;AAGtBG,QAAAA,UAAU,EAACW,MAAM,CAACE,OAHI;AAItBZ,QAAAA,YAAY,EAAC;AAJS,OAAN;;AAMjB;AAAS,aAAOS,KAAP;AApCb;AAuCF,CAxCD;;KAAMD,W;AAyCN,eAAeA,WAAf","sourcesContent":["import {SIGN_UP,SIGNUP_DONE,SIGNUP_ERROR,LOGIN,LOGIN_ERROR,LOGIN_DONE} from '../actions/Actiontypes.js';\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\nconst initialState={\r\n    loading: false,\r\n    signupErrors:[],\r\n    signsuccess:'',\r\n    loginError:[],\r\n    loginsuccess:''\r\n}\r\nconst token=localStorage.getItem('mytoken');\r\nif(token)\r\n{\r\n    const decodedtoken=jwt_decode(token);\r\nconst expires=new Date(decodedtoken.exp*1000);\r\n\r\n\r\n}\r\n//console.log('Decoded token',decodedtoken);\r\nconst AuthReducer=(state=initialState,action)=>{\r\n   switch(action.type)\r\n   {\r\n       case SIGN_UP:return{\r\n           ...state,\r\n           loading:true\r\n       }\r\n       case SIGNUP_DONE:return{\r\n           ...state,\r\n           loading:false,\r\n           signupErrors:[],\r\n           signsuccess:action.payload\r\n       }\r\n       case SIGNUP_ERROR:return{\r\n           ...state,\r\n           loading:false,\r\n           signupErrors:action.payload,\r\n           signsuccess:''\r\n       }\r\n       case LOGIN:return{\r\n        ...state,\r\n        loading:true\r\n\r\n       }\r\n       case LOGIN_DONE:return{\r\n        ...state,\r\n        loading:false,\r\n        loginError:[],\r\n        loginsuccess:action.payload\r\n\r\n       }\r\n       case LOGIN_ERROR:return{ \r\n           ...state,\r\n        loading:false,\r\n        loginError:action.payload,\r\n        loginsuccess:''\r\n    }\r\n       default: return state;\r\n   }\r\n  \r\n}\r\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}