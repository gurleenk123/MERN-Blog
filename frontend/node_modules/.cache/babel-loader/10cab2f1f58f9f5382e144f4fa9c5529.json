{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_POST, POST_ERROR, POST_SUCCESS } from './PostTypes.js'; //const token=localStorage.getItem('mytoken');\n\nexport const creating = post => {\n  return function (dispatch, getState) {\n    //const check=getState();\n    //console.log(\"check \",check);\n    const {\n      AuthReducer: {\n        token\n      }\n    } = getState();\n    console.log(token);\n    dispatch(create());\n    var config = {\n      method: 'post',\n      url: 'http://localhost:5000/post/createpost',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      },\n      data: post\n    };\n    axios(config).then(function (response) {\n      console.log(\"response:\", response);\n      dispatch(createdone(response.data.message));\n    }).catch(function (error) {\n      console.log(\"errors are:\", error.response);\n      dispatch(createerror(error.response.data.errors));\n    });\n  };\n};\n\nconst create = () => {\n  return {\n    type: CREATE_POST\n  };\n};\n\nconst createdone = success => {\n  return {\n    type: POST_SUCCESS,\n    payload: success\n  };\n};\n\nconst createerror = error => {\n  return {\n    type: POST_ERROR,\n    payload: error\n  };\n};","map":{"version":3,"sources":["D:/data1/MERNblog/frontend/src/redux/actions/PostAction.js"],"names":["axios","CREATE_POST","POST_ERROR","POST_SUCCESS","creating","post","dispatch","getState","AuthReducer","token","console","log","create","config","method","url","headers","Authorization","data","then","response","createdone","message","catch","error","createerror","errors","type","success","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAoBC,UAApB,EAA+BC,YAA/B,QAAkD,gBAAlD,C,CACA;;AAEA,OAAO,MAAMC,QAAQ,GAAEC,IAAD,IAAQ;AAExB,SAAO,UAAUC,QAAV,EAAmBC,QAAnB,EAA6B;AAChC;AACA;AACA,UAAM;AAACC,MAAAA,WAAW,EAAE;AAAEC,QAAAA;AAAF;AAAd,QAAwBF,QAAQ,EAAtC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,IAAAA,QAAQ,CAACM,MAAM,EAAP,CAAR;AACA,QAAIC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,GAAG,EAAE,uCAFM;AAGXC,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAG,UAASR,KAAM,EADvB;AAER,wBAAgB;AAFR,OAHE;AAQXS,MAAAA,IAAI,EAAGb;AARI,KAAb;AAWAL,IAAAA,KAAK,CAACa,MAAD,CAAL,CAAcM,IAAd,CAAmB,UAAUC,QAAV,EAAoB;AACrCV,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBS,QAAxB;AACAd,MAAAA,QAAQ,CAACe,UAAU,CAACD,QAAQ,CAACF,IAAT,CAAcI,OAAf,CAAX,CAAR;AACD,KAHD,EAKCC,KALD,CAKO,UAAUC,KAAV,EAAiB;AAEtBd,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0Ba,KAAK,CAACJ,QAAhC;AACDd,MAAAA,QAAQ,CAACmB,WAAW,CAACD,KAAK,CAACJ,QAAN,CAAeF,IAAf,CAAoBQ,MAArB,CAAZ,CAAR;AACA,KATD;AAYH,GA7BD;AA+BL,CAjCM;;AAkCP,MAAMd,MAAM,GAAC,MAAI;AACb,SAAM;AACNe,IAAAA,IAAI,EAAC1B;AADC,GAAN;AAIH,CALD;;AAMA,MAAMoB,UAAU,GAAEO,OAAD,IAAW;AACxB,SAAO;AACHD,IAAAA,IAAI,EAACxB,YADF;AAEH0B,IAAAA,OAAO,EAAED;AAFN,GAAP;AAKH,CAND;;AAOA,MAAMH,WAAW,GAAED,KAAD,IAAS;AACvB,SAAO;AACHG,IAAAA,IAAI,EAACzB,UADF;AAEH2B,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAKH,CAND","sourcesContent":["import axios from 'axios';\r\nimport {CREATE_POST,POST_ERROR,POST_SUCCESS} from './PostTypes.js';\r\n//const token=localStorage.getItem('mytoken');\r\n\r\nexport const creating=(post)=>{\r\n  \r\n      return function (dispatch,getState) {\r\n          //const check=getState();\r\n          //console.log(\"check \",check);\r\n          const {AuthReducer :{ token}}=getState();\r\n          console.log(token);\r\n          dispatch(create());\r\n          var config = {\r\n            method: 'post',\r\n            url: 'http://localhost:5000/post/createpost',\r\n            headers: { \r\n             Authorization: `Bearer ${token}`,\r\n             'Content-Type': 'multipart/form-data'\r\n             \r\n            },\r\n            data : post\r\n          };\r\n      \r\n          axios(config).then(function (response) { \r\n            console.log(\"response:\",response);\r\n            dispatch(createdone(response.data.message));\r\n          })\r\n         \r\n          .catch(function (error) {\r\n            \r\n            console.log(\"errors are:\",error.response);\r\n           dispatch(createerror(error.response.data.errors));\r\n          });\r\n\r\n\r\n      }\r\n\r\n}\r\nconst create=()=>{\r\n    return{\r\n    type:CREATE_POST\r\n    }\r\n\r\n}\r\nconst createdone=(success)=>{\r\n    return {\r\n        type:POST_SUCCESS,\r\n        payload: success\r\n    }\r\n  \r\n}\r\nconst createerror=(error)=>{\r\n    return {\r\n        type:POST_ERROR,\r\n        payload: error\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}